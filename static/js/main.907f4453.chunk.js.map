{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAmCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBAEND,EAAOI,KAAI,SAAEC,EAAOC,GAAT,OACP,wBAAIL,UAAU,eAAeM,IAAKD,GAAQD,OAItD,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UC6CDC,G,kNAxDdC,MAAQ,CACPC,WAAW,EACXC,OAAQ,I,EAITC,U,sBAAY,8BAAAC,EAAA,sEAMkCC,IAAMC,IAAI,4DAN5C,gBAMaJ,EANb,EAMHK,KAAQA,KAAQL,OAExB,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IARhC,2C,kEAYXQ,KAAKN,c,+BAGI,IAAD,EACsBM,KAAKT,MAA3BC,EADA,EACAA,UAAWC,EADX,EACWA,OACnB,OACC,6BAASX,UAAU,aAEjBU,EACI,yBAAKV,UAAU,UACd,0BAAMA,UAAU,gBAAhB,eAGA,yBAAKA,UAAU,UAEbW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACCb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GA3CVuB,IAAMC,YCHxBC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.907f4453.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\n\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__Data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {\r\n                        genres.map(( genre, index ) => (\r\n                            <li className=\"genres_genre\" key={index}>{genre}</li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 150)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tisLoading: true,\n\t\tmovies: []\n\t};\n\n\t// axios.get 이 항상 빠르지 않기 때문에 componentDidMount() 가 끝날때까지 기다리게 한다.\n\tgetMovies = async () => {\n\t\t// axios use => npm i axios ( fetch 대신 사용 )\n\t\t// https://yts.mx/api/v2/list_movies.json\n\t\t// proxy : https://yts-proxy.now.sh/list_movies.json\n\t\t// const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\t\t// console.log(movies.data.data.movies);\n\t\tconst { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n\t\t// console.log(movies);\n\t\tthis.setState({ movies: movies, isLoading: false });\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getMovies();\n\t}\n\n\trender() {\n\t\tconst { isLoading, movies } = this.state;\n\t\treturn (\n\t\t\t<section className=\"container\">\n\t\t\t\t{\n\t\t\t\t\tisLoading ? (\n\t\t\t\t\t\t\t\t\t<div className=\"loader\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"loader__text\">Loading...</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"movies\">\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmovies.map(movie => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Movie \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={movie.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tyear={movie.year}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={movie.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsummary={movie.summary}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tposter={movie.medium_cover_image}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgenres={movie.genres} />\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</section>\n\t\t);\n\t}\n\n}\n\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n// render() {\n// \tconst { isLoading, movies } = this.state;\n// \treturn (\n// \t\t<div>\n// \t\t\t{\n// \t\t\t\tisLoading ? \"Loading...\" : movies.map(movie => {\n// \t\t\t\t\tconsole.log(movie);\n// \t\t\t\t\treturn <Movie \n// \t\t\t\t\t\tkey={movie.id}\n// \t\t\t\t\t\tid={movie.id}\n// \t\t\t\t\t\tyear={movie.year}\n// \t\t\t\t\t\ttitle={movie.title}\n// \t\t\t\t\t\tsummary={movie.summary}\n// \t\t\t\t\t\tposter={movie.medium_cover_image} />\n// \t\t\t\t})\n// \t\t\t}\n// \t\t</div>\n// \t);\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n// Component 는 HTML 을 반환\n// React는 component 를 사용해서 HTML 처럼 작성하려는 경우에 필요\n// Javascript 와 HTML 사이의 조합을 JSX 라고 함\n// JSX 는 Javascript 안의 HTML 임\n// React Application 은 하나의 component 만을 rendering 해야 함 > 꼼수가 있긴 함"],"sourceRoot":""}